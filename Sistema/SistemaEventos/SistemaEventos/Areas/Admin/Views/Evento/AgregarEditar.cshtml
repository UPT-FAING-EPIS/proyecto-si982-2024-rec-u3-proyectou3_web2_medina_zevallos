@model SistemaEventos.Models.Evento
@{
    ViewBag.Title = "AgregarEditar";
}


<div class="flex flex-col gap-2 py-4 md:flex-row md:items-center print:hidden">
    <div class="grow">
        <h5 class="text-16">Registro de Eventos</h5>
    </div>
    <ul class="flex items-center gap-2 text-sm font-normal shrink-0">
        <li class="relative before:content-['\ea54'] before:font-remix ltr:before:-right-1 rtl:before:-left-1  before:absolute before:text-[18px] before:-top-[3px] ltr:pr-4 rtl:pl-4 before:text-slate-400 dark:text-zink-200">
            <a href="~/Evento/Index" class="text-slate-400 dark:text-zink-200">Eventos</a>
        </li>
        <li class="text-slate-700 dark:text-zink-100">
            @(Model.Id > 0 ? Model.Titulo : "Nuevo Evento")
        </li>
    </ul>
</div>

@using (Html.BeginForm("Guardar", "Evento", FormMethod.Post))
{
    @Html.HiddenFor(x => x.Id)
    <div class="card">
        <div class="card-body">
            
            <form action="#!">
                <div class="grid grid-cols-1 gap-x-5 md:grid-cols-2 xl:grid-cols-2">

                    <div class="mb-4">
                        @Html.Label("Id:")
                        @*@Html.TextBoxFor(x => x.Id, new { @class = "form-control" })*@
                        @Html.TextBoxFor(x => x.Id, new
                        {
                            @type = "number",
                            @class = "form-input border-slate-200 dark:border-zink-500 focus:outline-none focus:border-custom-500 disabled:bg-slate-100 dark:disabled:bg-zink-600 disabled:border-slate-300 dark:disabled:border-zink-500 dark:disabled:text-zink-200 disabled:text-slate-500 dark:text-zink-100 dark:bg-zink-700 dark:focus:border-custom-800 placeholder:text-slate-400 dark:placeholder:text-zink-200",

                            @required = "required",
                            disabled = true
                        })
                    </div>
                    <div class="mb-4">
                        @Html.Label("Titulo:")
                        @Html.TextBoxFor(x => x.Titulo, new
                        {
                            @type = "text",
                            @class = "form-input border-slate-200 dark:border-zink-500 focus:outline-none focus:border-custom-500 disabled:bg-slate-100 dark:disabled:bg-zink-600 disabled:border-slate-300 dark:disabled:border-zink-500 dark:disabled:text-zink-200 disabled:text-slate-500 dark:text-zink-100 dark:bg-zink-700 dark:focus:border-custom-800 placeholder:text-slate-400 dark:placeholder:text-zink-200",
                            @placeholder = "Ingresa un Titulo",
                            @required = "required"
                        })
                        @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-red-500" })
                    </div>

                    <div class="mb-4">

                        <label for="stateInput" class="inline-block mb-2 text-base font-medium">Estado <span class="text-red-500">*</span></label>
                        
                        <select name="Estado"
                                class="form-select border-slate-200 dark:border-zink-500 focus:outline-none focus:border-custom-500 disabled:bg-slate-100 dark:disabled:bg-zink-600 disabled:border-slate-300 dark:disabled:border-zink-500 dark:disabled:text-zink-200 disabled:text-slate-500 dark:text-zink-100 dark:bg-zink-700 dark:focus:border-custom-800 placeholder:text-slate-400 dark:placeholder:text-zink-200" 
                                id="stateInput" 
                                required="">
                            <option @(Model.Estado == "" ? "selected" : "") value="">
                                - Seleccione -
                            </option>

                            <option @(Model.Estado == "1" ? "selected" : "") value="1">
                                Activo
                            </option>

                            <option @(Model.Estado == "0" ? "selected" : "") value="0">
                                Inactivo
                            </option>
                        </select>
                    </div>


                    <div class="mb-4">
                        @Html.Label("Costo:")
                        @Html.TextBoxFor(x => x.Costo, new
                        {
                            @type = "number",
                            @class = "form-input border-slate-200 dark:border-zink-500 focus:outline-none focus:border-custom-500 disabled:bg-slate-100 dark:disabled:bg-zink-600 disabled:border-slate-300 dark:disabled:border-zink-500 dark:disabled:text-zink-200 disabled:text-slate-500 dark:text-zink-100 dark:bg-zink-700 dark:focus:border-custom-800 placeholder:text-slate-400 dark:placeholder:text-zink-200",
                            @placeholder = "0",
                            @required = "required"
                        })
                        @Html.ValidationMessageFor(model => model.Costo, "", new { @class = "text-red-500" })
                    </div>
                    <div class="mb-4">
                        @Html.Label("Costo por Invitado:")
                        @Html.TextBoxFor(x => x.CostoPorInvitado, new
                   {
                       @type = "number",
                       @class = "form-input border-slate-200 dark:border-zink-500 focus:outline-none focus:border-custom-500 disabled:bg-slate-100 dark:disabled:bg-zink-600 disabled:border-slate-300 dark:disabled:border-zink-500 dark:disabled:text-zink-200 disabled:text-slate-500 dark:text-zink-100 dark:bg-zink-700 dark:focus:border-custom-800 placeholder:text-slate-400 dark:placeholder:text-zink-200",
                       @placeholder = "0",
                       @required = "required"
                   })
                        @Html.ValidationMessageFor(model => model.CostoPorInvitado, "", new { @class = "text-red-500" })
                    </div>

                    <div class="mb-4">
                        @Html.Label("Tipo Evento:")

                        <select name="IdTipoEvento"
                                class="form-select border-slate-200 dark:border-zink-500 focus:outline-none focus:border-custom-500 disabled:bg-slate-100 dark:disabled:bg-zink-600 disabled:border-slate-300 dark:disabled:border-zink-500 dark:disabled:text-zink-200 disabled:text-slate-500 dark:text-zink-100 dark:bg-zink-700 dark:focus:border-custom-800 placeholder:text-slate-400 dark:placeholder:text-zink-200"
                                id="stateInput"
                                required="">

                            <option @(Model.IdTipoEvento.Equals("") ?  "selected": "") value="">
                                --Selecione--
                                </option>
                                @foreach (var c in ViewBag.TipoEvento)
                                {
                                    <option @(Model.IdTipoEvento.Equals(c.Id) ? "selected" : "") value="@c.Id">
                                        @c.Nombre
                                    </option>
                                }
                        </select>
                        @Html.ValidationMessageFor(model => model.IdTipoEvento, "", new { @class = "text-red-500" })

                    </div>




                    <div class="mb-4">
                        @Html.Label("Descripcion:")
                        @Html.TextAreaFor(x => x.Descripcion, new
                        {
                            rows = "10",
                            @type = "text",
                            @class = "form-input border-slate-200 dark:border-zink-500 focus:outline-none focus:border-custom-500 disabled:bg-slate-100 dark:disabled:bg-zink-600 disabled:border-slate-300 dark:disabled:border-zink-500 dark:disabled:text-zink-200 disabled:text-slate-500 dark:text-zink-100 dark:bg-zink-700 dark:focus:border-custom-800 placeholder:text-slate-400 dark:placeholder:text-zink-200",
                            @placeholder = "Ingresa una descripcion",
                            @required = "required"
                        })
                        @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-red-500" })
                    </div>
                    <div class="mb-4">
                    </div>
                    <div class="flex justify-end gap-2">

                        <a href="@Url.Action("Index", "Evento", new { area = "Admin"})"
                           class="text-red-500 bg-white btn hover:text-red-500 hover:bg-red-100 focus:text-red-500 focus:bg-red-100 active:text-red-500 active:bg-red-100 dark:bg-zink-700 dark:hover:bg-red-500/10 dark:focus:bg-red-500/10 dark:active:bg-red-500/10">
                            Cancelar
                        </a>
                        <button type="submit" class="text-white transition-all duration-200 ease-linear btn bg-custom-500 border-custom-500 hover:text-white hover:bg-custom-600 hover:border-custom-600 focus:text-white focus:bg-custom-600 focus:border-custom-600 focus:ring focus:ring-custom-100 active:text-white active:bg-custom-600 active:border-custom-600 active:ring active:ring-custom-100">
                            Submit
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
}
